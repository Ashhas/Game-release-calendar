name: Firebase App Distribution

on:
  workflow_dispatch:
    inputs:
      release_notes:
        type: string
        description: 'Release notes for testers'
        required: false
        default: 'New test build'

env:
  FLUTTER_VERSION: 3.29.1
  JAVA_VERSION: '17'
  ARTIFACT_RETENTION_DAYS: 30

jobs:
  build:
    name: Build Android APK
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
      build_number: ${{ steps.version.outputs.build_number }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get version
        id: version
        run: |
          VERSION=$(grep "^version:" pubspec.yaml | cut -d' ' -f2)
          if [ -z "$VERSION" ]; then
            echo "Error: Could not extract version from pubspec.yaml"
            exit 1
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Building version: $VERSION"

          # Extract build number from version (e.g., 1.0.0+2 -> 2)
          BUILD_NUMBER=$(echo $VERSION | cut -d'+' -f2)
          if [ -z "$BUILD_NUMBER" ] || [ "$BUILD_NUMBER" = "$VERSION" ]; then
            echo "Warning: No build number found in version, using 1"
            BUILD_NUMBER="1"
          fi
          echo "build_number=$BUILD_NUMBER" >> $GITHUB_OUTPUT

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true

      - name: Create env.json
        run: |
          mkdir -p env
          echo '${{ secrets.ENV_JSON }}' > env/env.json

      - name: Decode keystore
        run: |
          echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 -d > android/app/keystore.jks

      - name: Create key.properties
        run: |
          cat > android/key.properties <<EOF
          storePassword=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          keyPassword=${{ secrets.ANDROID_KEY_PASSWORD }}
          keyAlias=${{ secrets.ANDROID_KEY_ALIAS }}
          storeFile=keystore.jks
          EOF

      - name: Install dependencies
        run: flutter pub get

      - name: Generate code
        run: dart run build_runner build --delete-conflicting-outputs

      - name: Run tests
        run: flutter test
        continue-on-error: false

      - name: Build APK
        run: |
          flutter build apk --release

          # Verify APK was created
          if [ ! -f "build/app/outputs/flutter-apk/app-release.apk" ]; then
            echo "Error: APK file not found"
            exit 1
          fi

          echo "APK size: $(du -h build/app/outputs/flutter-apk/app-release.apk | cut -f1)"

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-apk-${{ steps.version.outputs.version }}
          path: build/app/outputs/flutter-apk/app-release.apk
          retention-days: ${{ env.ARTIFACT_RETENTION_DAYS }}
          if-no-files-found: error

      - name: Build Summary
        run: |
          echo "## Build Complete âœ…" >> $GITHUB_STEP_SUMMARY
          echo "- **Version:** ${{ steps.version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Build Number:** ${{ steps.version.outputs.build_number }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Artifact:** app-apk-${{ steps.version.outputs.version }}" >> $GITHUB_STEP_SUMMARY

  distribute:
    name: Upload to Firebase App Distribution
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: firebase-app-distribution
    steps:
      - name: Download APK artifact
        uses: actions/download-artifact@v4
        with:
          name: app-apk-${{ needs.build.outputs.version }}

      - name: Verify APK file
        run: |
          if [ ! -f "app-release.apk" ]; then
            echo "Error: APK file not found after download"
            echo "Available files:"
            ls -la
            exit 1
          fi
          echo "APK file verified: $(du -h app-release.apk | cut -f1)"

      - name: Upload to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{ secrets.FIREBASE_APP_ID }}
          serviceCredentialsFileContent: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_JSON }}
          releaseNotes: |
            Version: ${{ needs.build.outputs.version }}
            ${{ github.event.inputs.release_notes }}

            Commit: ${{ github.sha }}
            Branch: ${{ github.ref_name }}
            Author: ${{ github.actor }}
          releaseNotesFile: ''
          file: app-release.apk

      - name: Distribution Summary
        run: |
          echo "## Firebase Distribution Complete ðŸš€" >> $GITHUB_STEP_SUMMARY
          echo "- **Version:** ${{ needs.build.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Build Number:** ${{ needs.build.outputs.build_number }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Release Notes:** ${{ github.event.inputs.release_notes }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Next Steps" >> $GITHUB_STEP_SUMMARY
          echo "1. Go to [Firebase Console](https://console.firebase.google.com)" >> $GITHUB_STEP_SUMMARY
          echo "2. Navigate to App Distribution" >> $GITHUB_STEP_SUMMARY
          echo "3. Add testers to the release" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "APK has been uploaded to Firebase App Distribution." >> $GITHUB_STEP_SUMMARY